{"version":3,"sources":["context.js","Components/contacts/Contact.js","Components/contacts/Contacts.js","Components/layout/Header.js","Components/pages/About.js","Components/layout/TextInputGroup.js","Components/contacts/AddContact.js","Components/pages/NotFound.js","Components/test/Test.js","Components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","bind","float","color","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","target","onSubmit","preventDefault","newContact","post","history","push","Test","fetch","then","response","json","console","log","EditContact","updateContact","match","params","put","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d0084076.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {Link} from 'react-router-dom';\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false,\r\n  };\r\n  onShowClick = (e) => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n  //   onDeleteClick = () => {\r\n  //     //   this.props.deleteClickHandeler();\r\n  //   };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h3>\r\n                {name}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                ></i>\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i className=\"fas fa-pencil-alt\"\r\n                  style={{cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}></i>\r\n                </Link>\r\n              </h3>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Contact: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n      /*{ <div className=\"card card-body mb-3\">\r\n        <h3>\r\n          {contact.name}\r\n          <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\r\n          <i onClick={this.onDeleteClick} className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}}></i>\r\n        </h3>\r\n        {showContactInfo ? (\r\n          <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">Email: {contact.email}</li>\r\n            <li className=\"list-group-item\">Contact: {contact.phone}</li>\r\n          </ul>\r\n        ) : null}\r\n      </div>} */\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  //   deleteClickHandeler: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n//   deleteContact = (id) => {\r\n//     const { contacts } = this.state;\r\n//     const newContacts = contacts.filter((contact) => contact.id !== id);\r\n//     this.setState({ contacts: newContacts });\r\n//   };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <div className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span>List\r\n              </div>\r\n              {contacts.map((contact) => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                //   deleteClickHandeler={this.deleteContact.bind(\r\n                //     this,\r\n                //     contact.id\r\n                //   )}\r\n                ></Contact>\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n\r\n    // const { contacts } = this.state;\r\n    // return (\r\n    //   <React.Fragment>\r\n    //     {contacts.map((contact) => (\r\n    //       <Contact\r\n    //         key={contact.id}\r\n    //         contact={contact}\r\n    //         deleteClickHandeler={this.deleteContact.bind(this, contact.id)}\r\n    //       ></Contact>\r\n    //     ))}\r\n    //   </React.Fragment>\r\n    // );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n        <div className=\"container\">\r\n          <a href=\"/\" className=\"navbar-brand\">\r\n            {branding}\r\n          </a>\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i>HOME\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\"></i>ADD\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\"></i>ABOUT\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager\",\r\n};\r\n\r\n//TypeChecking\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\"> Simple App to Manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames('form-control from-control-lg', {\r\n            'is-invalid': error\r\n        })}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required!!\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required!!\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required!!\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4 \">\r\n        <span className=\"text-danger\">404 </span>Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, This page does not exist!!!</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((json) => console.log(json));\r\n  }\r\n  // componentWillMount() {\r\n  //     console.log('componentWillMount');\r\n  // }\r\n  // componentDidUpdate() {\r\n  //     console.log('componentWillUpdate');\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Test</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n      const { id } = this.props.match.params;\r\n      const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      \r\n      const contact = res.data;\r\n\r\n      this.setState({\r\n          name: contact.name,\r\n          email: contact.email,\r\n          phone: contact.phone\r\n      });\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required!!\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required!!\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required!!\" } });\r\n      return;\r\n    }\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    name=\"name\"\r\n                    label=\"Name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    label=\"Email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    name=\"phone\"\r\n                    label=\"Phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Edit\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  ></input>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./Components/contacts/Contacts\";\nimport Header from \"./Components/layout/Header\";\nimport About from \"./Components/pages/About\";\nimport AddContact from \"./Components/contacts/AddContact\";\nimport NotFound from \"./Components/pages/NotFound\";\nimport Test from './Components/test/Test';\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport EditContact from \"./Components/contacts/EditContact\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header></Header>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}></Route>\n              <Route exact path=\"/contact/add\" component={AddContact}></Route>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n              <Route exact path=\"/about\" component={About}></Route>\n              <Route exact path=\"/test\" component={Test}></Route>\n              <Route component={NotFound}></Route>\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}